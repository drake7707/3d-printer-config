[gcode_macro TEST_ENDSTOP_REPEATABILITY]
variable_cache: {}
gcode:
    {% set axis    = params.get('AXIS','')|upper %}
    {% set cycles  = params.get('CYCLES', 10)|int %}
    {% set retract = params.get('RETRACT', 5)|float %}

    {% if axis not in ['X','Y','Z'] %}
        { action_respond_info("AXIS must be X, Y or Z") }
    {% elif cycles < 2 %}
        { action_respond_info("CYCLES must be ≥ 2") }
    {% else %}
        {% set step_name = 'stepper_' ~ axis|lower %}
        SET_GCODE_VARIABLE MACRO=TEST_ENDSTOP_REPEATABILITY VARIABLE=cache VALUE="{ { 'name': step_name, 'l': [] } }"
        {% set sign = '-' if printer.configfile.settings[step_name].get('homing_positive_dir', False) else '' %}
        { action_respond_info("Running test on %s-axis — %d cycles, retract %.2f mm" % (axis, cycles, retract)) }
        {% for i in range(cycles) %}
            G28 {axis}
            M400
            _TEST_ENDSTOP_REPEATABILITY RECORD={axis}
            G91
            G0 {axis}{sign}{retract}      ; relative retract
            G90
            M400
            G4 P100
        {% endfor %}
        _TEST_ENDSTOP_REPEATABILITY PROCESS={axis}
    {% endif %}

[gcode_macro _TEST_ENDSTOP_REPEATABILITY]
gcode:
    {% set cache = printer['gcode_macro TEST_ENDSTOP_REPEATABILITY'].cache %}
    {% if 'RECORD' in params %}
        {% set kin = printer.printer.lookup_object('toolhead').get_kinematics() %}
        {% set ns = namespace(stepper_obj=None) %}
        {% for s in kin.get_steppers() if s.get_name() == cache.name and not ns.stepper_obj %}
                {% set ns.stepper_obj = s %}
        {% endfor %}
        {% set _ = cache.l.append(ns.stepper_obj.get_mcu_position()) %}
        SET_GCODE_VARIABLE MACRO=TEST_ENDSTOP_REPEATABILITY VARIABLE=cache VALUE="{ cache }"
    {% elif 'PROCESS' in params %}
        {% set n = cache.l|length %}
        {% if n < 2 %}
            { action_respond_info("Not enough samples — got %d, need at least 2." % n) }
        {% else %}
            #---< steps/mm
            {% set cfg           = printer.configfile.settings[cache.name] %}
            {% set steps_per_rev = cfg.full_steps_per_rotation|float * cfg.microsteps|float %}
            {% set step_dist     = cfg.rotation_distance|float / steps_per_rev %}
            #---< min|max range
            {% set range_s  = cache.l|max - cache.l|min %}
            {% set range_mm = range_s * step_dist %}
            #---< std dev
            {% set ns       = namespace(ssd=0.0) %}
            {% set avg_s    = (cache.l|sum) / n %}
            {% for v in cache.l %}{% set ns.ssd = ns.ssd + (v - avg_s)**2 %}{% endfor %}
            {% set std_s    = (ns.ssd / n)**0.5 %}
            {% set std_mm   = std_s  * step_dist %}
            #---< report
            {% set _ = action_respond_info( [
                "="*40,
                "Endstop Repeatability Results — %s-axis" % cache.name|replace('stepper_', ''),
                "Cycles Run         : %d"      % n,
                "-"*20,
                "Range (Max-Min)    : %.6f mm  (%d steps)" % (range_mm, range_s),
                "Standard Deviation : %.6f mm  (%.2f steps)" % (std_mm, std_s),
                "-"*20,
                "Raw MCU steps      : %s" % cache.l,
                "="*40 ]|join('\n') ) %}
        {% endif %}
    {% endif %}    