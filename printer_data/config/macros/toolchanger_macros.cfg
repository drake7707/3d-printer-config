[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    G28 Z

[gcode_macro _TAP_PROBE_ACTIVATE]
description: Ensure safe temp for bed probing
gcode:
    {% set max_temp = 150 %}
    {% set actual_temp = printer[params.HEATER].temperature %}
    {% set target_temp = printer[params.HEATER].target %}
    {% if target_temp > max_temp %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (target_temp, max_temp)) }
        SET_HEATER_TEMPERATURE HEATER={params.HEATER} TARGET={ max_temp|int - 5 }
    {% endif %}
    # Temperature target is already low enough, but nozzle may still be too hot.
    {% if actual_temp > max_temp  + 2 %}
        { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (actual_temp, max_temp)) }
        TEMPERATURE_WAIT SENSOR={params.HEATER} MAXIMUM={ max_temp }
    {% endif %}

[gcode_macro CHECK_ACTIVE_T0]
gcode:
  {% set tool = printer[printer.toolchanger.tool].tool_number %}
  {% if tool != 0 %}
    {% set msg = 'T0 is not active, active tool is ' ~ tool|string ~ '. Cancelling print.' %}
    SET_DISPLAY_TEXT MSG="{msg}"
    RESPOND TYPE=error MSG="{msg}"
    CANCEL_PRINT
  {% endif %}
    
[gcode_macro PRINT_START]
variable_printing: False
variable_tools_used_during_print: []
gcode:
  {% set material = params.FILAMENT|default('PLA')|string %} ; Get material type from params
  {% set bedtemp = params.BED_TEMP|default('0')|string %} ; Get the bed temperature
  {% set chambertemp = params.CHAMBER_TEMP|default('0')|string %} ; Get the chamber temperature
  
  SET_DISPLAY_TEXT MSG="Initializing"
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=False

  # Register the tools used during print
  {% set tools_used_during_print = [] %}
  {% for tool_nr in printer.toolchanger.tool_numbers %}
    {% set tooltemp_param = 'T' ~ tool_nr|string ~ '_TEMP' %}
    {% if tooltemp_param in params %}
      {% set _ = tools_used_during_print.append(tool_nr) %}
      SET_GCODE_VARIABLE macro=PRINT_START variable=tools_used_during_print value="{tools_used_during_print}"
    {% endif %}
  {% endfor %}
  RESPOND TYPE='echo' MSG="The print uses the following tools: {tools_used_during_print|join(' ')}. M104 will be ignored for all other tools while the print is active"

  
  INITIALIZE_TOOLCHANGER
  CHECK_ACTIVE_T0 ; Check T0 is active

  # Turn off all the leds of the tools that are not used
  {% for tool_nr in printer.toolchanger.tool_numbers %}
    {% set tooltemp_param = 'T' ~ tool_nr|string ~ '_TEMP' %}
    {% if tooltemp_param in params %}
      STATUS_READY T={tool_nr}
    {% else %}
      STATUS_OFF T={tool_nr}
    {% endif %}
  {% endfor %}
  
  SET_DISPLAY_TEXT MSG="Heating the bed to target temperature"
  M190 S{bedtemp} ; heat the bed

  SET_DISPLAY_TEXT MSG="Heating T0 hotend to 150c" 
  STATUS_HEATING
  M109 S150 ; heat the nozzle
    
  SET_DISPLAY_TEXT MSG="Homing" 
  STATUS_HOMING
  G28
  
  SET_DISPLAY_TEXT MSG="Cleaning nozzle" 
  STATUS_CLEANING
  CLEAN_NOZZLE

  SET_DISPLAY_TEXT MSG="Quad Gantry Leveling" 
  STATUS_LEVELING
  QUAD_GANTRY_LEVEL

  SET_DISPLAY_TEXT MSG="Homing" 
  STATUS_HOMING
  G28

  SET_DISPLAY_TEXT MSG="Building adaptive bed mesh" 
  STATUS_MESHING
  BED_MESH_CALIBRATE ADAPTIVE=1             ; do a bed mesh
  G1 Z20 F3000                   ; move nozzle away from bed
    
  M109 S0 # Stop to heat, the actual printing may happen with a different hotend.

  SET_DISPLAY_TEXT MSG="Heating up the hotends to idle temp"
  # Preheat all the hotends in use
  {% for tool_nr in printer.toolchanger.tool_numbers %}
    {% set tooltemp_param = 'T' ~ tool_nr|string ~ '_IDLE_TEMP' %}
    {% if tooltemp_param in params %}
      M104 T{tool_nr} S{params[tooltemp_param]}
    {% endif %}
  {% endfor %}

  SET_DISPLAY_TEXT MSG="Switching to active tool" 
  {% if params.TOOL is defined %}
    T{params.TOOL}
  {% endif %}

  # Turn off leds of T0 if T0 is never used for the print
  {% if not 'T0_TEMP' in params %}
    STATUS_OFF T=0
  {% endif %}

  SET_DISPLAY_TEXT MSG="Heating hotend to target temp" 
  STATUS_HEATING
  M109 S{ params.TOOL_TEMP }
  G0 Z2 F300 ;Move up a bit
  G92 E0 ; Zero extruder
  
  START_TOOL_PROBE_CRASH_DETECTION
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=True
  
  SET_DISPLAY_TEXT MSG="Cleaning nozzle ooze" 
  STATUS_CLEANING
  CLEAN_NOZZLE ; clean the nozzle to remove and leftover ooze
    
  SET_MATERIAL MATERIAL={material} ; setup the things specific for the material
    
  SET_DISPLAY_TEXT MSG="Printing" 
  STATUS_PRINTING  
  
#####################################
##            Set Material         ##
##      Version 1.0  2023-4-2      ##
#####################################
## From: https://github.com/rootiest/zippy-klipper_config
[gcode_macro SET_MATERIAL]
description: Set values based on material type
variable_material: ''
gcode:
    {% set material = params.MATERIAL|default('PLA')|string %} ; Get material type from slicer
    {% if material == 'PLA' %} ; If material type is PLA
        SET_FAN_SPEED FAN=nevermore_fan SPEED=0.0
        SET_FAN_SPEED FAN=bed_fans SPEED=0.0
    {% elif material == 'ABS' %} ; If material type is ABS
        SET_FAN_SPEED FAN=nevermore_fan SPEED=0.5
        SET_FAN_SPEED FAN=bed_fans SPEED=0.5
    {% elif material == 'ASA' %} ; If material type is ASA
        SET_FAN_SPEED FAN=nevermore_fan SPEED=0.5
        SET_FAN_SPEED FAN=bed_fans SPEED=0.5
    {%else %} ; If any other material type
        SET_FAN_SPEED FAN=nevermore_fan SPEED=0.0
        SET_FAN_SPEED FAN=bed_fans SPEED=0.0
    {% endif %}


[gcode_macro PRINT_END]
gcode:
    STOP_TOOL_PROBE_CRASH_DETECTION
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=False
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament

    G91                            ; relative positioning
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 20) %}
        {% set z_safe = 20.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}


    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    G0 Z{z_safe} F3600             ; move nozzle up

    TURN_OFF_HEATERS
    M107                           ; turn off fan
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0.0 ; turn off nevermore fans
    SET_FAN_SPEED FAN=bed_fans SPEED=0.0 ; turn off bed fans
    M140                           ; turn off bed

    T0 ; switch back to T0
    
    G90                            ; absolute positioning
   # {% set tool = printer[printer.toolchanger.tool] %}
   # G0 X{tool.params_park_x} Y{tool.params_safe_y} Z300 F3600          ; park nozzle up top
    
    #M18                            ; Motors off

    BED_MESH_CLEAR

    SET_DISPLAY_TEXT MSG="Ready"

    {% for tool_nr in printer.toolchanger.tool_numbers %}
       STATUS_READY T={tool_nr}
    {% endfor %}    


[gcode_macro PREHEAT]
variable_material: ''
gcode:
  
  {% set tool = printer.tool_probe_endstop.active_tool_number %}
  
  {% if tool == -1 %}
    RESPOND TYPE='error' MSG="No active tool"
  {% else %}
  
    {% set material = params.MATERIAL|default('PLA')|string %} ; Get material type from slicer
    {% if material == 'PLA' %} 
        RESPOND TYPE='echo' MSG="Heating for PLA"
        M104 S200 T{tool}
    {% elif material == 'ABS' %} 
        RESPOND TYPE='echo' MSG="Heating for ABS"
        M104 S240 T{tool}
    {% elif material == 'ASA' %} 
        RESPOND TYPE='echo' MSG="Heating for ASA"
        M104 S240 T{tool}
    {% else %} 
        RESPOND TYPE='echo' MSG="Unknown material {material}"
    {% endif %}
    
  {% endif %}


[gcode_macro LOAD_FILAMENT]
gcode:
  M117 Loading
  
  G90 ; Absolute pos
  G1 X95 Y10 Z50 F1800 ; Move to center
  
  M83                            ; set extruder to relative
  G1 E50 F300                   ; extrude 5 cm
  G1 E50 F300                   ; extrude 5 cm
  G1 E-4 F1800                  ; retract some
  M82                           ; set extruder to absolute
  M400                          ; wait for buffer to clear
  M117 Loading done

[gcode_macro UNLOAD_FILAMENT]
gcode:
  M117 Unloading
  
  M83                           ; set extruder to relative
  G1 E5 F500                   ; extrude 5 mm
  G1 E-50 F1000                   ; retract 5 cm
  G1 E-50 F1000                   ; retract 5 cm
  M82                            ; set extruder to absolute
  M400                          ; wait for buffer to clear
  
  M117 Unloading done


[gcode_macro UNLOAD_ONE_FILAMENT]
gcode:
  M117 Unloading {params.TOOL}
  M109 T{params.TOOL} S240 ;Wait until heated
  {% set tool_name = printer.toolchanger.tool_names[params.TOOL|int] %}
  {% set extruder = printer[tool_name].extruder %}
  M104 T{params.TOOL} S240 ;Heat up the filament
  TEMPERATURE_WAIT SENSOR={extruder} MINIMUM=240
  ACTIVATE_EXTRUDER EXTRUDER={extruder}
  M83                           ; set extruder to relative
  G1 E5 F500                   ; extrude 5 mm
  G1 E-50 F1000                   ; retract 5 cm
  G1 E-50 F1000                   ; retract 5 cm
  M82                            ; set extruder to absolute
  M400                          ; wait for buffer to clear
  TURN_OFF_HEATERS
  M117 Unloading done

[gcode_macro UNLOAD_ALL_FILAMENT]
gcode:
  {% set tools = printer.toolchanger.tool_names %}
  M117 Unloading
  {% for tool in tools %}
    M104 T{printer[tool].tool_number} S240 ;Heat up the filament
  {% endfor %}
  {% for tool in tools %}
    M109 T{printer[tool].tool_number} S240 ;Wait until heated
    ACTIVATE_EXTRUDER EXTRUDER={printer[tool].extruder}
    M83                           ; set extruder to relative
    G1 E5 F500                     ; extrude 5 mm
    G1 E-50 F1000                   ; retract 5 cm
    G1 E-50 F1000                   ; retract 5 cm
  {% endfor %}
  M400                          ; Finish all th emoves
  M82                            ; set extruder to absolute
  TURN_OFF_HEATERS
  M117 Unloading done

[gcode_macro CHANGE_NOZZLE]
gcode:
  M117 Nozzle change
  M104 S240
  G90 ; Absolute pos
  G1 X95 Y10 Z100 F1800 ; Move to center
  M109 S240 ;Heat up the filament
  M83                            ; set extruder to relative
  G1 E5 F250                   ; extrude 5 mm
  G1 E-50 F1000                ; retract 5 cm
  M82                            ; set extruder to absolute
  M117 Ready to swap